{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/calendar": {
          "description": "Manage your calendars"
        },
        "https://www.googleapis.com/auth/calendar.readonly": {
          "description": "View your calendars"
        }
      }
    }
  },
  "documentationLink": "http://code.google.com/apis/calendar/v3/using.html",
  "name": "calendar",
  "resources": {
    "acl": {
      "methods": {
        "delete": {
          "description": "Deletes an access control rule.",
          "id": "calendar.acl.delete",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "ruleId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ACL rule identifier."
            }
          },
          "parameterOrder": [
            "calendarId",
            "ruleId"
          ],
          "httpMethod": "DELETE",
          "path": "calendars/{calendarId}/acl/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "get": {
          "description": "Returns an access control rule.",
          "response": {
            "$ref": "AclRule"
          },
          "id": "calendar.acl.get",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "ruleId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ACL rule identifier."
            }
          },
          "parameterOrder": [
            "calendarId",
            "ruleId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}/acl/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "insert": {
          "description": "Creates an access control rule.",
          "response": {
            "$ref": "AclRule"
          },
          "id": "calendar.acl.insert",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "AclRule"
          },
          "path": "calendars/{calendarId}/acl",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "list": {
          "description": "Returns the rules in the access control list for the calendar.",
          "response": {
            "$ref": "Acl"
          },
          "id": "calendar.acl.list",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}/acl",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "patch": {
          "description": "Updates an access control rule. This method supports patch semantics.",
          "response": {
            "$ref": "AclRule"
          },
          "id": "calendar.acl.patch",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "ruleId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ACL rule identifier."
            }
          },
          "parameterOrder": [
            "calendarId",
            "ruleId"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "AclRule"
          },
          "path": "calendars/{calendarId}/acl/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "update": {
          "description": "Updates an access control rule.",
          "response": {
            "$ref": "AclRule"
          },
          "id": "calendar.acl.update",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "ruleId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "ACL rule identifier."
            }
          },
          "parameterOrder": [
            "calendarId",
            "ruleId"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "AclRule"
          },
          "path": "calendars/{calendarId}/acl/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        }
      }
    },
    "calendarList": {
      "methods": {
        "delete": {
          "description": "Deletes an entry on the user's calendar list.",
          "id": "calendar.calendarList.delete",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "DELETE",
          "path": "users/me/calendarList/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "get": {
          "description": "Returns an entry on the user's calendar list.",
          "response": {
            "$ref": "CalendarListEntry"
          },
          "id": "calendar.calendarList.get",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "GET",
          "path": "users/me/calendarList/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "insert": {
          "description": "Adds an entry to the user's calendar list.",
          "response": {
            "$ref": "CalendarListEntry"
          },
          "id": "calendar.calendarList.insert",
          "httpMethod": "POST",
          "request": {
            "$ref": "CalendarListEntry"
          },
          "path": "users/me/calendarList",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "list": {
          "description": "Returns entries on the user's calendar list.",
          "response": {
            "$ref": "CalendarList"
          },
          "id": "calendar.calendarList.list",
          "parameters": {
            "maxResults": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "Maximum number of entries returned on one result page. Optional.",
              "format": "int32"
            },
            "minAccessRole": {
              "location": "query",
              "enum": [
                "freeBusyReader",
                "owner",
                "reader",
                "writer"
              ],
              "type": "string",
              "description": "The minimum access role for the user in the returned entires. Optional. The default is no restriction.",
              "enumDescriptions": [
                "The user can read free/busy information.",
                "The user can read and modify events and access control lists.",
                "The user can read events that are not private.",
                "The user can read and modify events."
              ]
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token specifying which result page to return. Optional."
            },
            "showHidden": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to show hidden entries. Optional. The default is False."
            }
          },
          "httpMethod": "GET",
          "path": "users/me/calendarList",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "patch": {
          "description": "Updates an entry on the user's calendar list. This method supports patch semantics.",
          "response": {
            "$ref": "CalendarListEntry"
          },
          "id": "calendar.calendarList.patch",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "CalendarListEntry"
          },
          "path": "users/me/calendarList/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "update": {
          "description": "Updates an entry on the user's calendar list.",
          "response": {
            "$ref": "CalendarListEntry"
          },
          "id": "calendar.calendarList.update",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "CalendarListEntry"
          },
          "path": "users/me/calendarList/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        }
      }
    },
    "calendars": {
      "methods": {
        "clear": {
          "description": "Clears a primary calendar. This operation deletes all data associated with the primary calendar of an account and cannot be undone.",
          "id": "calendar.calendars.clear",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "POST",
          "path": "calendars/{calendarId}/clear",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "delete": {
          "description": "Deletes a secondary calendar.",
          "id": "calendar.calendars.delete",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "DELETE",
          "path": "calendars/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "get": {
          "description": "Returns metadata for a calendar.",
          "response": {
            "$ref": "Calendar"
          },
          "id": "calendar.calendars.get",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "insert": {
          "description": "Creates a secondary calendar.",
          "response": {
            "$ref": "Calendar"
          },
          "id": "calendar.calendars.insert",
          "httpMethod": "POST",
          "request": {
            "$ref": "Calendar"
          },
          "path": "calendars",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "patch": {
          "description": "Updates metadata for a calendar. This method supports patch semantics.",
          "response": {
            "$ref": "Calendar"
          },
          "id": "calendar.calendars.patch",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Calendar"
          },
          "path": "calendars/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "update": {
          "description": "Updates metadata for a calendar.",
          "response": {
            "$ref": "Calendar"
          },
          "id": "calendar.calendars.update",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "Calendar"
          },
          "path": "calendars/{calendarId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        }
      }
    },
    "colors": {
      "methods": {
        "get": {
          "description": "Returns the color definitions for calendars and events.",
          "response": {
            "$ref": "Colors"
          },
          "id": "calendar.colors.get",
          "httpMethod": "GET",
          "path": "colors"
        }
      }
    },
    "events": {
      "methods": {
        "delete": {
          "description": "Deletes an event.",
          "id": "calendar.events.delete",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the deletion of the event. Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "DELETE",
          "path": "calendars/{calendarId}/events/{eventId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "get": {
          "description": "Returns an event.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.get",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "maxAttendees": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
              "format": "int32"
            },
            "timeZone": {
              "location": "query",
              "type": "string",
              "description": "Time zone used in the response. Optional. The default is the time zone of the calendar."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}/events/{eventId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "import": {
          "description": "Imports an event.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.import",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "Event"
          },
          "path": "calendars/{calendarId}/events/import",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "insert": {
          "description": "Creates an event.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.insert",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the creation of the new event. Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "Event"
          },
          "path": "calendars/{calendarId}/events",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "instances": {
          "description": "Returns instances of the specified recurring event.",
          "response": {
            "$ref": "Events"
          },
          "id": "calendar.events.instances",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Recurring event identifier."
            },
            "maxAttendees": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
              "format": "int32"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "Maximum number of events returned on one result page. Optional.",
              "format": "int32"
            },
            "originalStart": {
              "location": "query",
              "type": "string",
              "description": "The original start time of the instance in the result. Optional."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token specifying which result page to return. Optional."
            },
            "showDeleted": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to include deleted events (with 'eventStatus' equals 'cancelled') in the result. Optional. The default is False."
            },
            "timeZone": {
              "location": "query",
              "type": "string",
              "description": "Time zone used in the response. Optional. The default is the time zone of the calendar."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}/events/{eventId}/instances",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "list": {
          "description": "Returns events on the specified calendar.",
          "response": {
            "$ref": "Events"
          },
          "id": "calendar.events.list",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "iCalUID": {
              "location": "query",
              "type": "string",
              "description": "Specifies iCalendar UID (iCalUID) of events to be included in the response. Optional."
            },
            "maxAttendees": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.",
              "format": "int32"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "minimum": "1",
              "description": "Maximum number of events returned on one result page. Optional.",
              "format": "int32"
            },
            "orderBy": {
              "location": "query",
              "enum": [
                "startTime",
                "updated"
              ],
              "type": "string",
              "description": "The order of the events returned in the result. Optional. The default is an unspecified, stable order.",
              "enumDescriptions": [
                "Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter \"singleEvents\" is True)",
                "Order by last modification time (ascending)."
              ]
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token specifying which result page to return. Optional."
            },
            "q": {
              "location": "query",
              "type": "string",
              "description": "Free text search terms to find events that match these terms in any field, except for extended properties. Optional."
            },
            "showDeleted": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to include deleted events (with 'eventStatus' equals 'cancelled') in the result. Optional. The default is False."
            },
            "showHiddenInvitations": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to include hidden invitations in the result. Optional. The default is False."
            },
            "singleEvents": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False."
            },
            "timeMax": {
              "location": "query",
              "type": "string",
              "description": "Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time."
            },
            "timeMin": {
              "location": "query",
              "type": "string",
              "description": "Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time."
            },
            "timeZone": {
              "location": "query",
              "type": "string",
              "description": "Time zone used in the response. Optional. The default is the time zone of the calendar."
            },
            "updatedMin": {
              "location": "query",
              "type": "string",
              "description": "Lower bound for an event's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time."
            }
          },
          "parameterOrder": [
            "calendarId"
          ],
          "httpMethod": "GET",
          "path": "calendars/{calendarId}/events",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "move": {
          "description": "Moves an event to another calendar, i.e. changes an event's organizer.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.move",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier of the source calendar where the event currently is on."
            },
            "destination": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "Calendar identifier of the target calendar where the event is to be moved to."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the change of the event's organizer. Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId",
            "destination"
          ],
          "httpMethod": "POST",
          "path": "calendars/{calendarId}/events/{eventId}/move",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "patch": {
          "description": "Updates an event. This method supports patch semantics.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.patch",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "PATCH",
          "request": {
            "$ref": "Event"
          },
          "path": "calendars/{calendarId}/events/{eventId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "quickAdd": {
          "description": "Creates an event based on a simple text string.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.quickAdd",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the creation of the event. Optional. The default is False."
            },
            "text": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The text describing the event to be created."
            }
          },
          "parameterOrder": [
            "calendarId",
            "text"
          ],
          "httpMethod": "POST",
          "path": "calendars/{calendarId}/events/quickAdd",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "reset": {
          "description": "Resets a specialized instance of a recurring event to its original state.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.reset",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the event update. Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "POST",
          "path": "calendars/{calendarId}/events/{eventId}/reset",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        },
        "update": {
          "description": "Updates an event.",
          "response": {
            "$ref": "Event"
          },
          "id": "calendar.events.update",
          "parameters": {
            "calendarId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Calendar identifier."
            },
            "eventId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Event identifier."
            },
            "sendNotifications": {
              "location": "query",
              "type": "boolean",
              "description": "Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False."
            }
          },
          "parameterOrder": [
            "calendarId",
            "eventId"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "Event"
          },
          "path": "calendars/{calendarId}/events/{eventId}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar"
          ]
        }
      }
    },
    "freebusy": {
      "methods": {
        "query": {
          "description": "Returns free/busy information for a set of calendars.",
          "response": {
            "$ref": "FreeBusyResponse"
          },
          "id": "calendar.freebusy.query",
          "httpMethod": "POST",
          "request": {
            "$ref": "FreeBusyRequest"
          },
          "path": "freeBusy",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        }
      }
    },
    "settings": {
      "methods": {
        "get": {
          "description": "Returns a single user setting.",
          "response": {
            "$ref": "Setting"
          },
          "id": "calendar.settings.get",
          "parameters": {
            "setting": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Name of the user setting."
            }
          },
          "parameterOrder": [
            "setting"
          ],
          "httpMethod": "GET",
          "path": "users/me/settings/{setting}",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        },
        "list": {
          "description": "Returns all user settings for the authenticated user.",
          "response": {
            "$ref": "Settings"
          },
          "id": "calendar.settings.list",
          "httpMethod": "GET",
          "path": "users/me/settings",
          "scopes": [
            "https://www.googleapis.com/auth/calendar",
            "https://www.googleapis.com/auth/calendar.readonly"
          ]
        }
      }
    }
  },
  "basePath": "/calendar/v3/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/calendar-16.png",
    "x32": "http://www.google.com/images/icons/product/calendar-32.png"
  },
  "schemas": {
    "Acl": {
      "type": "object",
      "id": "Acl",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the collection."
        },
        "items": {
          "items": {
            "$ref": "AclRule"
          },
          "type": "array",
          "description": "List of rules on the access control list."
        },
        "kind": {
          "type": "string",
          "default": "calendar#acl",
          "description": "Type of the collection (\"calendar#acl\")."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token used to access the next page of this result. Omitted if no further results are available."
        }
      }
    },
    "AclRule": {
      "type": "object",
      "id": "AclRule",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the ACL rule."
        },
        "kind": {
          "type": "string",
          "default": "calendar#aclRule",
          "description": "Type of the resource (\"calendar#aclRule\")."
        },
        "role": {
          "type": "string",
          "description": "The role assigned to the scope. Possible values are: \n- \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
        },
        "scope": {
          "type": "object",
          "description": "The scope of the rule.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of the scope. Possible values are: \n- \"default\" - The public scope. This is the default value. \n- \"user\" - Limits the scope to a single user. \n- \"group\" - Limits the scope to a group. \n- \"domain\" - Limits the scope to a domain. Note: The permissions granted to the \"default\", or public, scope apply to any user, authenticated or not."
            },
            "value": {
              "type": "string",
              "description": "The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type \"default\"."
            }
          }
        }
      }
    },
    "Calendar": {
      "type": "object",
      "id": "Calendar",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the calendar. Optional."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the calendar."
        },
        "kind": {
          "type": "string",
          "default": "calendar#calendar",
          "description": "Type of the resource (\"calendar#calendar\")."
        },
        "location": {
          "type": "string",
          "description": "Geographic location of the calendar as free-form text. Optional."
        },
        "summary": {
          "type": "string",
          "description": "Title of the calendar."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of the calendar. Optional."
        }
      }
    },
    "CalendarList": {
      "type": "object",
      "id": "CalendarList",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the collection."
        },
        "items": {
          "items": {
            "$ref": "CalendarListEntry"
          },
          "type": "array",
          "description": "Calendars that are present on the user's calendar list."
        },
        "kind": {
          "type": "string",
          "default": "calendar#calendarList",
          "description": "Type of the collection (\"calendar#calendarList\")."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token used to access the next page of this result."
        }
      }
    },
    "CalendarListEntry": {
      "type": "object",
      "id": "CalendarListEntry",
      "properties": {
        "accessRole": {
          "type": "string",
          "description": "The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \n- \"freeBusyReader\" - Provides read access to free/busy information. \n- \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
        },
        "colorId": {
          "type": "string",
          "description": "The color of the calendar. This is an ID referring to an entry in the \"calendar\" section of the colors definition (see the \"colors\" endpoint). Optional."
        },
        "defaultReminders": {
          "items": {
            "$ref": "EventReminder"
          },
          "type": "array",
          "description": "The default reminders that the authenticated user has for this calendar."
        },
        "description": {
          "type": "string",
          "description": "Description of the calendar. Optional. Read-only."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "hidden": {
          "type": "boolean",
          "description": "Whether the calendar has been hidden from the list. Optional. The default is False."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the calendar."
        },
        "kind": {
          "type": "string",
          "default": "calendar#calendarListEntry",
          "description": "Type of the resource (\"calendar#calendarListEntry\")."
        },
        "location": {
          "type": "string",
          "description": "Geographic location of the calendar as free-form text. Optional. Read-only."
        },
        "selected": {
          "type": "boolean",
          "description": "Whether the calendar content shows up in the calendar UI. Optional. The default is True."
        },
        "summary": {
          "type": "string",
          "description": "Title of the calendar. Read-only."
        },
        "summaryOverride": {
          "type": "string",
          "description": "The summary that the authenticated user has set for this calendar. Optional."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of the calendar. Optional. Read-only."
        }
      }
    },
    "ColorDefinition": {
      "type": "object",
      "id": "ColorDefinition",
      "properties": {
        "background": {
          "type": "string",
          "description": "The background color associated with this color definition."
        },
        "foreground": {
          "type": "string",
          "description": "The foreground color that can be used to write on top of a background with 'background' color."
        }
      }
    },
    "Colors": {
      "type": "object",
      "id": "Colors",
      "properties": {
        "calendar": {
          "type": "object",
          "description": "Palette of calendar colors, mapping from the color ID to its definition. An 'calendarListEntry' resource refers to one of these color IDs in its 'color' field. Read-only.",
          "additionalProperties": {
            "$ref": "ColorDefinition"
          }
        },
        "event": {
          "type": "object",
          "description": "Palette of event colors, mapping from the color ID to its definition. An 'event' resource may refer to one of these color IDs in its 'color' field. Read-only.",
          "additionalProperties": {
            "$ref": "ColorDefinition"
          }
        },
        "kind": {
          "type": "string",
          "default": "calendar#colors",
          "description": "Type of the resource (\"calendar#colors\")."
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the color palette (as a RFC 3339 timestamp). Read-only.",
          "format": "date-time"
        }
      }
    },
    "Error": {
      "type": "object",
      "id": "Error",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain, or broad category, of the error."
        },
        "reason": {
          "type": "string",
          "description": "Specific reason for the error. Some of the possible values are: \n- \"groupTooBig\" - The group of users requested is too large for a single query. \n- \"tooManyCalendarsRequested\" - The number of calendars requested is too large for a single query. \n- \"notFound\" - The requested resource was not found. \n- \"internalError\" - The API service has encountered an internal error. Additional error types may be added in the future, so clients should gracefully handle additional error statuses not included in this list."
        }
      }
    },
    "Event": {
      "type": "object",
      "id": "Event",
      "properties": {
        "anyoneCanAddSelf": {
          "type": "boolean",
          "description": "Whether anyone can invite themselves to the event. Optional. The default is False."
        },
        "attendees": {
          "items": {
            "$ref": "EventAttendee"
          },
          "type": "array",
          "description": "The attendees of the event."
        },
        "attendeesOmitted": {
          "type": "boolean",
          "description": "Whether attendees have been omitted from the event's representation. When retrieving an event, this is due to a restriction specified by the 'maxAttendee' query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False."
        },
        "colorId": {
          "type": "string",
          "description": "The color of the event. This is an ID referring to an entry in the \"event\" section of the colors definition (see the \"colors\" endpoint). Optional."
        },
        "created": {
          "type": "string",
          "description": "Creation time of the event (as a RFC 3339 timestamp). Read-only.",
          "format": "date-time"
        },
        "creator": {
          "type": "object",
          "description": "The creator of the event. Read-only.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The creator's name, if available."
            },
            "email": {
              "type": "string",
              "description": "The creator's email address, if available."
            }
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the event. Optional."
        },
        "end": {
          "$ref": "EventDateTime",
          "description": "The end time of the event. For a recurring event, this is the end time of the first instance."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "extendedProperties": {
          "type": "object",
          "description": "Extended properties of the event.",
          "properties": {
            "private": {
              "type": "object",
              "description": "Properties that are private to the copy of the event that appears on this calendar.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "shared": {
              "type": "object",
              "description": "Properties that are shared between copies of the event on other attendees' calendars.",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "gadget": {
          "type": "object",
          "description": "A gadget that extends this event.",
          "properties": {
            "display": {
              "type": "string",
              "description": "The gadget's display mode. Optional. Possible values are: \n- \"icon\" - The gadget displays next to the event's title in the calendar view. \n- \"chip\" - The gadget displays when the event is clicked."
            },
            "height": {
              "type": "integer",
              "description": "The gadget's height in pixels. Optional.",
              "format": "int32"
            },
            "iconLink": {
              "type": "string",
              "description": "The gadget's icon URL."
            },
            "link": {
              "type": "string",
              "description": "The gadget's URL."
            },
            "preferences": {
              "type": "object",
              "description": "Preferences.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "title": {
              "type": "string",
              "description": "The gadget's title."
            },
            "type": {
              "type": "string",
              "description": "The gadget's type."
            },
            "width": {
              "type": "integer",
              "description": "The gadget's width in pixels. Optional.",
              "format": "int32"
            }
          }
        },
        "guestsCanInviteOthers": {
          "type": "boolean",
          "description": "Whether attendees other than the organizer can invite others to the event. Optional. The default is False."
        },
        "guestsCanModify": {
          "type": "boolean",
          "description": "Whether attendees other than the organizer can modify the event. Optional. The default is False."
        },
        "guestsCanSeeOtherGuests": {
          "type": "boolean",
          "description": "Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is False."
        },
        "htmlLink": {
          "type": "string",
          "description": "An absolute link to this event in the Google Calendar Web UI. Read-only."
        },
        "iCalUID": {
          "type": "string",
          "description": "Event ID in the iCalendar format."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the event."
        },
        "kind": {
          "type": "string",
          "default": "calendar#event",
          "description": "Type of the resource (\"calendar#event\")."
        },
        "location": {
          "type": "string",
          "description": "Geographic location of the event as free-form text. Optional."
        },
        "organizer": {
          "type": "object",
          "description": "The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in 'attendees' with the 'organizer' field set to True.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The organizer's name, if available."
            },
            "email": {
              "type": "string",
              "description": "The organizer's email address, if available."
            }
          }
        },
        "originalStartTime": {
          "$ref": "EventDateTime",
          "description": "For an instance of a recurring event, this is the time at which this event would start according to the recurrence data in the recurring event identified by recurringEventId. Immutable."
        },
        "privateCopy": {
          "type": "boolean",
          "description": "Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable."
        },
        "recurrence": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event. This field is omitted for single events or instances of recurring events."
        },
        "recurringEventId": {
          "type": "string",
          "description": "For an instance of a recurring event, this is the event ID of the recurring event itself. Immutable."
        },
        "reminders": {
          "type": "object",
          "description": "Information about the event's reminders for the authenticated user.",
          "properties": {
            "overrides": {
              "items": {
                "$ref": "EventReminder"
              },
              "type": "array",
              "description": "If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event."
            },
            "useDefault": {
              "type": "boolean",
              "description": "Whether the default reminders of the calendar apply to the event."
            }
          }
        },
        "sequence": {
          "type": "integer",
          "description": "Sequence number as per iCalendar.",
          "format": "int32"
        },
        "start": {
          "$ref": "EventDateTime",
          "description": "The start time of the event. For a recurring event, this is the start time of the first instance."
        },
        "status": {
          "type": "string",
          "description": "Status of the event. Optional. Possible values are: \n- \"confirmed\" - The event is confirmed. This is the default status. \n- \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The event is cancelled."
        },
        "summary": {
          "type": "string",
          "description": "Title of the event."
        },
        "transparency": {
          "type": "string",
          "description": "Whether the event blocks time on the calendar. Optional. Possible values are: \n- \"opaque\" - The event blocks time on the calendar. This is the default value. \n- \"transparent\" - The event does not block time on the calendar."
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the event (as a RFC 3339 timestamp). Read-only.",
          "format": "date-time"
        },
        "visibility": {
          "type": "string",
          "description": "Visibility of the event. Optional. Possible values are: \n- \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n- \"public\" - The event is public and event details are visible to all readers of the calendar. \n- \"private\" - The event is private and only event attendees may view event details. \n- \"confidential\" - The event is private. This value is provided for compatibility reasons."
        }
      }
    },
    "EventAttendee": {
      "type": "object",
      "id": "EventAttendee",
      "properties": {
        "additionalGuests": {
          "type": "integer",
          "description": "Number of additional guests. Optional. The default is 0.",
          "format": "int32"
        },
        "comment": {
          "type": "string",
          "description": "The attendee's response comment. Optional."
        },
        "displayName": {
          "type": "string",
          "description": "The attendee's name, if available. Optional."
        },
        "email": {
          "type": "string",
          "description": "The attendee's email address, if available. This field must be present when adding an attendee."
        },
        "optional": {
          "type": "boolean",
          "description": "Whether this is an optional attendee. Optional. The default is False."
        },
        "organizer": {
          "type": "boolean",
          "description": "Whether the attendee is the organizer of the event. Read-only. The default is False."
        },
        "resource": {
          "type": "boolean",
          "description": "Whether the attendee is a resource. Read-only. The default is False."
        },
        "responseStatus": {
          "type": "string",
          "description": "The attendee's response status. Possible values are: \n- \"needsAction\" - The attendee has not responded to the invitation. \n- \"declined\" - The attendee has declined the invitation. \n- \"tentative\" - The attendee has tentatively accepted the invitation. \n- \"accepted\" - The attendee has accepted the invitation."
        },
        "self": {
          "type": "boolean",
          "description": "Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False."
        }
      }
    },
    "EventDateTime": {
      "type": "object",
      "id": "EventDateTime",
      "properties": {
        "date": {
          "type": "string",
          "description": "The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
          "format": "date"
        },
        "dateTime": {
          "type": "string",
          "description": "The time, as a combined date-time value (formatted according to RFC 3339). A time zone offset is required unless a time zone is explicitly specified in 'timeZone'.",
          "format": "date-time"
        },
        "timeZone": {
          "type": "string",
          "description": "The name of the time zone in which the time is specified (e.g. \"Europe/Zurich\"). Optional. The default is the time zone of the calendar."
        }
      }
    },
    "EventReminder": {
      "type": "object",
      "id": "EventReminder",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method used by this reminder. Possible values are: \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are sent via SMS. \n- \"popup\" - Reminders are sent via a UI popup."
        },
        "minutes": {
          "type": "integer",
          "description": "Number of minutes before the start of the event when the reminder should trigger.",
          "format": "int32"
        }
      }
    },
    "Events": {
      "type": "object",
      "id": "Events",
      "properties": {
        "accessRole": {
          "type": "string",
          "description": "The user's access role for this calendar. Read-only. Possible values are: \n- \"none\" - The user has no access. \n- \"freeBusyReader\" - The user has read access to free/busy information. \n- \"reader\" - The user has read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. \n- \"writer\" - The user has read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. \n- \"owner\" - The user has ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs."
        },
        "defaultReminders": {
          "items": {
            "$ref": "EventReminder"
          },
          "type": "array",
          "description": "The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have 'reminders.useDefault' set to 'true')."
        },
        "description": {
          "type": "string",
          "description": "Description of the calendar. Read-only."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the collection."
        },
        "items": {
          "items": {
            "$ref": "Event"
          },
          "type": "array",
          "description": "List of events on the calendar."
        },
        "kind": {
          "type": "string",
          "default": "calendar#events",
          "description": "Type of the collection (\"calendar#events\")."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token used to access the next page of this result. Omitted if no further results are available."
        },
        "summary": {
          "type": "string",
          "description": "Title of the calendar. Read-only."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of the calendar. Read-only."
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the calendar (as a RFC 3339 timestamp). Read-only.",
          "format": "date-time"
        }
      }
    },
    "FreeBusyCalendar": {
      "type": "object",
      "id": "FreeBusyCalendar",
      "properties": {
        "busy": {
          "items": {
            "$ref": "TimePeriod"
          },
          "type": "array",
          "description": "List of time ranges during which this calendar should be regarded as busy."
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "Optional error(s) (if computation for the calendar failed)."
        }
      }
    },
    "FreeBusyGroup": {
      "type": "object",
      "id": "FreeBusyGroup",
      "properties": {
        "calendars": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of calendars' identifiers within a group."
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "Optional error(s) (if computation for the group failed)."
        }
      }
    },
    "FreeBusyRequest": {
      "type": "object",
      "id": "FreeBusyRequest",
      "properties": {
        "calendarExpansionMax": {
          "type": "integer",
          "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional.",
          "format": "int32"
        },
        "groupExpansionMax": {
          "type": "integer",
          "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.",
          "format": "int32"
        },
        "items": {
          "items": {
            "$ref": "FreeBusyRequestItem"
          },
          "type": "array",
          "description": "List of calendars and/or groups to query."
        },
        "timeMax": {
          "type": "string",
          "description": "The end of the interval for the query.",
          "format": "date-time"
        },
        "timeMin": {
          "type": "string",
          "description": "The start of the interval for the query.",
          "format": "date-time"
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone used in the response. Optional. The default is UTC."
        }
      }
    },
    "FreeBusyRequestItem": {
      "type": "object",
      "id": "FreeBusyRequestItem",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of a calendar or a group."
        }
      }
    },
    "FreeBusyResponse": {
      "type": "object",
      "id": "FreeBusyResponse",
      "properties": {
        "calendars": {
          "type": "object",
          "description": "List of free/busy information for calendars.",
          "additionalProperties": {
            "$ref": "FreeBusyCalendar"
          }
        },
        "groups": {
          "type": "object",
          "description": "Expansion of groups.",
          "additionalProperties": {
            "$ref": "FreeBusyGroup"
          }
        },
        "kind": {
          "type": "string",
          "default": "calendar#freeBusy",
          "description": "Type of the resource (\"calendar#freeBusy\")."
        },
        "timeMax": {
          "type": "string",
          "description": "The end of the interval.",
          "format": "date-time"
        },
        "timeMin": {
          "type": "string",
          "description": "The start of the interval.",
          "format": "date-time"
        }
      }
    },
    "Setting": {
      "type": "object",
      "id": "Setting",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "id": {
          "type": "string",
          "description": "Name of the user setting."
        },
        "kind": {
          "type": "string",
          "default": "calendar#setting",
          "description": "Type of the resource (\"calendar#setting\")."
        },
        "value": {
          "type": "string",
          "description": "Value of the user setting. The format of the value depends on the ID of the setting."
        }
      }
    },
    "Settings": {
      "type": "object",
      "id": "Settings",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the collection."
        },
        "items": {
          "items": {
            "$ref": "Setting"
          },
          "type": "array",
          "description": "List of user settings."
        },
        "kind": {
          "type": "string",
          "default": "calendar#settings",
          "description": "Type of the collection (\"calendar#settings\")."
        }
      }
    },
    "TimePeriod": {
      "type": "object",
      "id": "TimePeriod",
      "properties": {
        "end": {
          "type": "string",
          "description": "The end of the time period.",
          "format": "date-time"
        },
        "start": {
          "type": "string",
          "description": "The start of the time period.",
          "format": "date-time"
        }
      }
    }
  },
  "description": "Lets you manipulate events and other calendar data.",
  "labels": [
    "labs"
  ],
  "version": "v3",
  "kind": "discovery#restDescription",
  "title": "Calendar API",
  "parameters": {
    "alt": {
      "location": "query",
      "enum": [
        "json"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for the response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ]
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
    },
    "userIp": {
      "location": "query",
      "type": "string",
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
    }
  },
  "id": "calendar:v3",
  "protocol": "rest"
}
